/////////////////////////////////////////////////////////////////////////////
// Name:        about.cpp
// Purpose:
// Author:
// Modified by:
// Created:     09/11/2010 16:05:24
// RCS-ID:
// Copyright:   Visual Collaboration Technologies Inc.
// Licence:
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 09/11/2010 16:05:24

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <sstream>
#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "about.h"
//#include "version.h"
extern std::string g_sVer;


////@begin XPM images
////@end XPM images


/*
 * About type definition
 */

IMPLEMENT_DYNAMIC_CLASS( About, wxDialog )


/*
 * About event table definition
 */

BEGIN_EVENT_TABLE( About, wxDialog )

////@begin About event table entries
    EVT_BUTTON( ID_OK_BUTTON, About::OnOkButtonClick )

////@end About event table entries

END_EVENT_TABLE()


/*
 * About constructors
 */

About::About()
{
    Init();
}

About::About( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*
 * About creator
 */

bool About::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin About creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end About creation
    return true;
}


/*
 * About destructor
 */

About::~About()
{
////@begin About destruction
////@end About destruction
}


/*
 * Member initialisation
 */

void About::Init()
{
////@begin About member initialisation
////@end About member initialisation
}


/*
 * Control creation for About
 */

void About::CreateControls()
{
////@begin About content construction
    About* itemDialog1 = this;

    wxStaticBox* itemStaticBoxSizer2Static = new wxStaticBox(itemDialog1, wxID_ANY, wxEmptyString);
    wxStaticBoxSizer* itemStaticBoxSizer2 = new wxStaticBoxSizer(itemStaticBoxSizer2Static, wxVERTICAL);
    itemDialog1->SetSizer(itemStaticBoxSizer2);
 
    wxStaticBox* itemStaticBoxSizer3Static = new wxStaticBox(itemDialog1, wxID_ANY, wxEmptyString);
    wxStaticBoxSizer* itemStaticBoxSizer3 = new wxStaticBoxSizer(itemStaticBoxSizer3Static, wxHORIZONTAL);
    itemStaticBoxSizer2->Add(itemStaticBoxSizer3, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
	
	std::stringstream ss;
#ifdef _WIN64
	ss<<"VMoveCAD "<<g_sVer<<" (64-bit)";
#else
	ss<<"VMoveCAD "<<g_sVer<<" (32-bit)";;
#endif
     wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, ss.str(), wxDefaultPosition, wxDefaultSize, 0 );
   //wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, _("VMoveCAD 1.0.111.523 (64-bit)"), wxDefaultPosition, wxDefaultSize, 0 );
    //wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, _("VMoveCAD 1.0.111.523 "), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxHORIZONTAL);
    itemStaticBoxSizer3->Add(itemBoxSizer5, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer6 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer7 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer6->Add(itemBoxSizer7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer8 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer6->Add(itemBoxSizer8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer9 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer6->Add(itemBoxSizer9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer10 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer6->Add(itemBoxSizer10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer11 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer12 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer12, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer13, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer14 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer5->Add(itemBoxSizer14, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton15 = new wxButton( itemDialog1, ID_OK_BUTTON, _("Ok"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer3->Add(itemButton15, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer16Static = new wxStaticBox(itemDialog1, wxID_ANY, wxEmptyString);
    wxStaticBoxSizer* itemStaticBoxSizer16 = new wxStaticBoxSizer(itemStaticBoxSizer16Static, wxHORIZONTAL);
    itemStaticBoxSizer2->Add(itemStaticBoxSizer16, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxStaticText* itemStaticText17 = new wxStaticText( itemDialog1, wxID_STATIC, _("Visual Collaboration Technologies Inc.   Copyright(C) 2010-2011"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticBoxSizer16->Add(itemStaticText17, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end About content construction
}


/*
 * Should we show tooltips?
 */

bool About::ShowToolTips()
{
    return true;
}

/*
 * Get bitmap resources
 */

wxBitmap About::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin About bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end About bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon About::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin About icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end About icon retrieval
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_OK_BUTTON
 */

void About::OnOkButtonClick( wxCommandEvent& event )
{
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_OK_BUTTON in About.
    // Before editing this code, remove the block markers.
    event.Skip();
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_OK_BUTTON in About.

      EndModal(1);
}

